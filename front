<html>
  <head><meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
	 *{
	 box-sizing:border-box;
	 }
	 body{
	
	 }
	  .header{ background-color:gray;
	  text-align:center;
	  font-size:50px;
	
	  padding:10px;
	  }
	  .top-nav{
         overflow:hidden;
	  background-color:black;
	  }
	  .top-nav a{
	  background-color:#333;
	  text-decoration:none;
	  font-size:30px;
	  color:#f1f1f1;
	   float:left;
	  display:block;
	  padding: 14px 16px;
	  }
	  .top-nav a:hover{
	  background-color:#ddd;
	  color:black;
	  }
	  p{
	  clear:left;
	  text-align:center;
	  font-size:30px;
	  color: tomato;
	  }
	</style>
  </head>
   <body>
   <div class="header">
   KNOW YOUR CAR
   </div>
   <div class="top-nav">
   <a href="#" id="left">BMW</a>
   <a href="#">AUDI</a>
   <a href="#">MERCEDES</a>
   <a href="#">MESARATI</a>
   <a href="#">LAMBORGHINI</a>
   </div>
   
   <p>welcome to the website<p>
   </body>
</html>


import android.content.Context
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import android.widget.TextView
import androidx.recyclerview.widget.RecyclerView

class TodoRVAdapter(
    val context: Context,
    val todoClickDeleteInterface:TodoClickDeleteInterface,
    val todoClickInterface:TodoClickInterface):RecyclerView.Adapter<TodoRVAdapter.ViewHolder>() {

    private val allTodo= ArrayList<Todo>()

    inner class ViewHolder(itemView: View):RecyclerView.ViewHolder(itemView){
        val todoTitle=itemView.findViewById<TextView>(R.id.idTodoTitle)
        val todoDescription=itemView.findViewById<TextView>(R.id.idTodoDescription)
        val todoDelete=itemView.findViewById<ImageView>(R.id.idTodoDelete)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
        val itemView=LayoutInflater.from(parent.context).inflate(R.layout.todo_rv_item,parent,false)
        return ViewHolder(itemView)
    }


    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
        holder.todoTitle.setText(allTodo.get(position).title)
        holder.todoDescription.setText(allTodo.get(position).description)

        holder.todoDelete.setOnClickListener({

            todoClickDeleteInterface.onTodoDeleteClick(allTodo.get(position))
        })

        holder.itemView.setOnClickListener({
            todoClickInterface.onTodoClick(allTodo.get(position))
        })
    }

    override fun getItemCount(): Int {
        return allTodo.size
    }

    fun updateList(newTodoList:List<Todo>){
        allTodo.clear()
        allTodo.addAll(newTodoList)
        notifyDataSetChanged()
    }
}

interface TodoClickInterface{
    fun onTodoClick(todo:Todo)
}

interface TodoClickDeleteInterface{
    fun onTodoDeleteClick(todo:Todo)
}
